{"ast":null,"code":"function createBroadcast(initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n\n  function getState() {\n    return _state;\n  }\n\n  function setState(state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) {\n        listeners[keys[i]](state);\n      }\n    }\n  } // subscribe to changes and return the subscriptionId\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.');\n    }\n\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId;\n  } // remove subscription by removing the listener function\n\n\n  function unsubscribe(id) {\n    delete listeners[id];\n  }\n\n  return {\n    getState: getState,\n    setState: setState,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n  };\n}\n\nexport default createBroadcast;","map":{"version":3,"names":["createBroadcast","initialState","listeners","id","_state","getState","setState","state","keys","Object","i","len","length","subscribe","listener","Error","currentId","unsubscribe"],"sources":["/home/samkach/Desktop/node/nasa-project/client/node_modules/brcast/dist/brcast.es.js"],"sourcesContent":["function createBroadcast (initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n\n  function getState () {\n    return _state\n  }\n\n  function setState (state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) { listeners[keys[i]](state); }\n    }\n  }\n\n  // subscribe to changes and return the subscriptionId\n  function subscribe (listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.')\n    }\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId\n  }\n\n  // remove subscription by removing the listener function\n  function unsubscribe (id) {\n    delete listeners[id];\n  }\n\n  return { getState: getState, setState: setState, subscribe: subscribe, unsubscribe: unsubscribe }\n}\n\nexport default createBroadcast;\n"],"mappings":"AAAA,SAASA,eAAT,CAA0BC,YAA1B,EAAwC;EACtC,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,EAAE,GAAG,CAAT;EACA,IAAIC,MAAM,GAAGH,YAAb;;EAEA,SAASI,QAAT,GAAqB;IACnB,OAAOD,MAAP;EACD;;EAED,SAASE,QAAT,CAAmBC,KAAnB,EAA0B;IACxBH,MAAM,GAAGG,KAAT;IACA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,SAAZ,CAAX;IACA,IAAIQ,CAAC,GAAG,CAAR;IACA,IAAIC,GAAG,GAAGH,IAAI,CAACI,MAAf;;IACA,OAAOF,CAAC,GAAGC,GAAX,EAAgBD,CAAC,EAAjB,EAAqB;MACnB;MACA,IAAIR,SAAS,CAACM,IAAI,CAACE,CAAD,CAAL,CAAb,EAAwB;QAAER,SAAS,CAACM,IAAI,CAACE,CAAD,CAAL,CAAT,CAAmBH,KAAnB;MAA4B;IACvD;EACF,CAlBqC,CAoBtC;;;EACA,SAASM,SAAT,CAAoBC,QAApB,EAA8B;IAC5B,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;MAClC,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;IACD;;IACD,IAAIC,SAAS,GAAGb,EAAhB;IACAD,SAAS,CAACc,SAAD,CAAT,GAAuBF,QAAvB;IACAX,EAAE,IAAI,CAAN;IACA,OAAOa,SAAP;EACD,CA7BqC,CA+BtC;;;EACA,SAASC,WAAT,CAAsBd,EAAtB,EAA0B;IACxB,OAAOD,SAAS,CAACC,EAAD,CAAhB;EACD;;EAED,OAAO;IAAEE,QAAQ,EAAEA,QAAZ;IAAsBC,QAAQ,EAAEA,QAAhC;IAA0CO,SAAS,EAAEA,SAArD;IAAgEI,WAAW,EAAEA;EAA7E,CAAP;AACD;;AAED,eAAejB,eAAf"},"metadata":{},"sourceType":"module"}