{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _detectNode = require('detect-node');\n\nvar _detectNode2 = _interopRequireDefault(_detectNode);\n\nvar _getDimensions = require('../get-dimensions');\n\nvar _getDimensions2 = _interopRequireDefault(_getDimensions);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Create a handler for responsive functionalities.\n * @param  {Object} depencencies - Depencencies.\n * @param  {Function} depencencies.getTheme - Inject the theme settings.\n * @param  {Function} depencencies.getDimensions - Inject the get dimensions tool.\n * @return {Object} - Handler.\n */\n\n\nexports.default = function (depencencies) {\n  var deps = _extends({\n    getTheme: function getTheme() {\n      return {};\n    },\n    getDimensions: _getDimensions2.default\n  }, depencencies);\n\n  return {\n    /**\n     * Get the current responsive stats.\n     * @return {Object} { small: Boolean, medium: Boolean, large: Boolean }\n     */\n    get: function get() {\n      var theme = deps.getTheme();\n\n      var _deps$getDimensions = deps.getDimensions(),\n          width = _deps$getDimensions.width;\n\n      var _theme$responsive = theme.responsive,\n          small = _theme$responsive.small,\n          medium = _theme$responsive.medium,\n          large = _theme$responsive.large;\n\n      if (width <= small) {\n        return {\n          small: true,\n          status: 'small'\n        };\n      } else if (width <= medium) {\n        return {\n          medium: true,\n          status: 'medium'\n        };\n      } else if (width <= large) {\n        return {\n          large: true,\n          status: 'large'\n        };\n      }\n\n      return {\n        xlarge: true,\n        status: 'xlarge'\n      };\n    },\n\n    /**\n     * Register a on resize window callback to know when the current browser viewport\n     * dimentions make the breakpoint change.\n     * @param  {Function} callback - It's called on every change on the breakpoint\n     * and receives and object defining the current viewport size.\n     * @return {Function} The event listener.\n     */\n    on: function on(callback) {\n      var _this = this;\n\n      var current = this.get();\n      var state = current.status;\n\n      var onChange = function onChange() {\n        var stats = _this.get();\n\n        if (stats.status !== state) {\n          callback(stats);\n          state = stats.status;\n        }\n      };\n\n      if (!_detectNode2.default) {\n        window.addEventListener('resize', onChange, false);\n      }\n\n      return onChange;\n    },\n\n    /**\n     * Turns off a window on resize callback previously created.\n     * @param  {Function} - The event callback.\n     */\n    off: function off(onChange) {\n      if (!_detectNode2.default) {\n        window.removeEventListener('resize', onChange, false);\n      }\n    }\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_detectNode","require","_detectNode2","_interopRequireDefault","_getDimensions","_getDimensions2","obj","__esModule","default","depencencies","deps","getTheme","getDimensions","get","theme","_deps$getDimensions","width","_theme$responsive","responsive","small","medium","large","status","xlarge","on","callback","_this","current","state","onChange","stats","window","addEventListener","off","removeEventListener"],"sources":["/home/samkach/Desktop/node/nasa-project/client/node_modules/arwes/lib/tools/createResponsive/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _detectNode = require('detect-node');\n\nvar _detectNode2 = _interopRequireDefault(_detectNode);\n\nvar _getDimensions = require('../get-dimensions');\n\nvar _getDimensions2 = _interopRequireDefault(_getDimensions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create a handler for responsive functionalities.\n * @param  {Object} depencencies - Depencencies.\n * @param  {Function} depencencies.getTheme - Inject the theme settings.\n * @param  {Function} depencencies.getDimensions - Inject the get dimensions tool.\n * @return {Object} - Handler.\n */\nexports.default = function (depencencies) {\n  var deps = _extends({\n    getTheme: function getTheme() {\n      return {};\n    },\n    getDimensions: _getDimensions2.default\n  }, depencencies);\n  return {\n\n    /**\n     * Get the current responsive stats.\n     * @return {Object} { small: Boolean, medium: Boolean, large: Boolean }\n     */\n    get: function get() {\n\n      var theme = deps.getTheme();\n\n      var _deps$getDimensions = deps.getDimensions(),\n          width = _deps$getDimensions.width;\n\n      var _theme$responsive = theme.responsive,\n          small = _theme$responsive.small,\n          medium = _theme$responsive.medium,\n          large = _theme$responsive.large;\n\n\n      if (width <= small) {\n        return { small: true, status: 'small' };\n      } else if (width <= medium) {\n        return { medium: true, status: 'medium' };\n      } else if (width <= large) {\n        return { large: true, status: 'large' };\n      }\n\n      return { xlarge: true, status: 'xlarge' };\n    },\n\n\n    /**\n     * Register a on resize window callback to know when the current browser viewport\n     * dimentions make the breakpoint change.\n     * @param  {Function} callback - It's called on every change on the breakpoint\n     * and receives and object defining the current viewport size.\n     * @return {Function} The event listener.\n     */\n    on: function on(callback) {\n      var _this = this;\n\n      var current = this.get();\n      var state = current.status;\n\n      var onChange = function onChange() {\n        var stats = _this.get();\n        if (stats.status !== state) {\n          callback(stats);\n          state = stats.status;\n        }\n      };\n\n      if (!_detectNode2.default) {\n        window.addEventListener('resize', onChange, false);\n      }\n\n      return onChange;\n    },\n\n\n    /**\n     * Turns off a window on resize callback previously created.\n     * @param  {Function} - The event callback.\n     */\n    off: function off(onChange) {\n      if (!_detectNode2.default) {\n        window.removeEventListener('resize', onChange, false);\n      }\n    }\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}