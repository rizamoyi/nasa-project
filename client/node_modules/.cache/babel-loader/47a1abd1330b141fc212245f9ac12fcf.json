{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isInBrowser = require('is-in-browser');\n\nvar _isInBrowser2 = _interopRequireDefault(_isInBrowser);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar js = '';\n/**\n * Export javascript style and css style vendor prefixes.\n * Based on \"transform\" support test.\n */\n\nvar css = ''; // We should not do anything if required serverside.\n\nif (_isInBrowser2['default']) {\n  // Order matters. We need to check Webkit the last one because\n  // other vendors use to add Webkit prefixes to some properties\n  var jsCssMap = {\n    Moz: '-moz-',\n    // IE did it wrong again ...\n    ms: '-ms-',\n    O: '-o-',\n    Webkit: '-webkit-'\n  };\n  var style = document.createElement('p').style;\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      js = key;\n      css = jsCssMap[key];\n      break;\n    }\n  }\n}\n/**\n * Vendor prefix string for the current browser.\n *\n * @type {{js: String, css: String}}\n * @api public\n */\n\n\nexports['default'] = {\n  js: js,\n  css: css\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","_isInBrowser","require","_isInBrowser2","_interopRequireDefault","obj","__esModule","js","css","jsCssMap","Moz","ms","O","Webkit","style","document","createElement","testProp","key"],"sources":["/home/samkach/Desktop/node/nasa-project/client/node_modules/css-vendor/lib/prefix.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isInBrowser = require('is-in-browser');\n\nvar _isInBrowser2 = _interopRequireDefault(_isInBrowser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar js = ''; /**\n              * Export javascript style and css style vendor prefixes.\n              * Based on \"transform\" support test.\n              */\n\nvar css = '';\n\n// We should not do anything if required serverside.\nif (_isInBrowser2['default']) {\n  // Order matters. We need to check Webkit the last one because\n  // other vendors use to add Webkit prefixes to some properties\n  var jsCssMap = {\n    Moz: '-moz-',\n    // IE did it wrong again ...\n    ms: '-ms-',\n    O: '-o-',\n    Webkit: '-webkit-'\n  };\n  var style = document.createElement('p').style;\n  var testProp = 'Transform';\n\n  for (var key in jsCssMap) {\n    if (key + testProp in style) {\n      js = key;\n      css = jsCssMap[key];\n      break;\n    }\n  }\n}\n\n/**\n * Vendor prefix string for the current browser.\n *\n * @type {{js: String, css: String}}\n * @api public\n */\nexports['default'] = { js: js, css: css };"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAD,CAA1C;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAE,WAAWA;EAAb,CAArC;AAA0D;;AAEjG,IAAIE,EAAE,GAAG,EAAT;AAAa;AACb;AACA;AACA;;AAEA,IAAIC,GAAG,GAAG,EAAV,C,CAEA;;AACA,IAAIL,aAAa,CAAC,SAAD,CAAjB,EAA8B;EAC5B;EACA;EACA,IAAIM,QAAQ,GAAG;IACbC,GAAG,EAAE,OADQ;IAEb;IACAC,EAAE,EAAE,MAHS;IAIbC,CAAC,EAAE,KAJU;IAKbC,MAAM,EAAE;EALK,CAAf;EAOA,IAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,EAA4BF,KAAxC;EACA,IAAIG,QAAQ,GAAG,WAAf;;EAEA,KAAK,IAAIC,GAAT,IAAgBT,QAAhB,EAA0B;IACxB,IAAIS,GAAG,GAAGD,QAAN,IAAkBH,KAAtB,EAA6B;MAC3BP,EAAE,GAAGW,GAAL;MACAV,GAAG,GAAGC,QAAQ,CAACS,GAAD,CAAd;MACA;IACD;EACF;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACAnB,OAAO,CAAC,SAAD,CAAP,GAAqB;EAAEQ,EAAE,EAAEA,EAAN;EAAUC,GAAG,EAAEA;AAAf,CAArB"},"metadata":{},"sourceType":"script"}